{"mappings":"AAAA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,IAAKJ,SAASC,cAAc,WAE9B,SAASI,EAAcC,EAAUP,GAC/B,MAAMQ,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEL,E,MAAUP,IAGpBa,EAAO,C,SAAEN,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAGbD,EAAKM,IAAIU,iBAAiB,SAE1B,SAAoBC,GAElB,GADAA,EAAEC,iBAEsB,KAAtBlB,EAAKK,OAAOc,OACS,KAArBnB,EAAKC,MAAMkB,OACS,KAApBnB,EAAKI,KAAKe,MAGV,OAAOC,MAAM,kCAEWb,EAAZ,EAAGP,EAAKC,MAAMkB,OACzBE,MAAK,EAACb,SAAEA,EAAQP,MAAEA,KACjBqB,QAAQC,IAAI,uBAAqBf,QAAiBP,SAAYuB,OAE/D,EAAOhB,WAAUP,WAASqB,QACzBC,IAAQ,sBAAKf,QAAgCP,SAOnD,WACE,IAAIwB,EAAOC,OAAO1B,EAAKC,MAAMkB,OAC7B,IAAK,IAAIQ,EAAI,EAAGA,GAAK3B,EAAKK,OAAOc,MAAOQ,GAAK,EAC3CpB,EAAcoB,EAAIF,GAAQC,OAAO1B,EAAKI,KAAKe,QACxCE,MAAK,EAACb,SAAEA,EAAQP,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBf,QAAiBP,MAAU,IAE7DuB,OAAM,EAAChB,SAAEA,EAAQP,MAAEA,KAClBqB,QAAQC,IAAI,sBAAoBf,QAAeP,Q,CAZrD2B,GAkBA5B,EAAKK,OAAOc,MAAQ,GACpBnB,EAAKC,MAAMkB,MAAQ,GACnBnB,EAAKI,KAAKe,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  btn: document.querySelector('button'),\n};\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nrefs.btn.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  if (\n    refs.amount.value === '' ||\n    refs.delay.value === '' ||\n    refs.step.value === ''\n  ) {\n    // preventDefault();\n    return alert('Все поля должны быть заполнены');\n  }\n  createPromise(1, refs.delay.value)\n    .then(({ position, delay }) =>\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    )\n    .catch(({ position, delay }) =>\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n    );\n\n  makeMorePromises();\n  clearInputs();\n}\n\nfunction makeMorePromises() {\n  let time = Number(refs.delay.value);\n  for (let i = 2; i <= refs.amount.value; i += 1) {\n    createPromise(i, (time += Number(refs.step.value)))\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) =>\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n}\n\nfunction clearInputs() {\n  refs.amount.value = '';\n  refs.delay.value = '';\n  refs.step.value = '';\n}\n"],"names":["$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","btn","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","value","alert","then","console","log","catch","time","Number","i","$47d4ff9957288465$var$makeMorePromises"],"version":3,"file":"03-promises.6acf1c89.js.map"}